@keyframes mltShdSpin {
  0% {
    box-shadow: 0 -0.83em 0 -0.4em,
      0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em,
      0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;
  }

  5%,
  95% {
    box-shadow: 0 -0.83em 0 -0.4em,
      0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em,
      0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;
  }

  10%,
  59% {
    box-shadow: 0 -0.83em 0 -0.4em,
      -0.087em -0.825em 0 -0.42em, -0.173em -0.812em 0 -0.44em,
      -0.256em -0.789em 0 -0.46em, -0.297em -0.775em 0 -0.477em;
  }

  20% {
    box-shadow: 0 -0.83em 0 -0.4em, -0.338em -0.758em 0 -0.42em,
      -0.555em -0.617em 0 -0.44em, -0.671em -0.488em 0 -0.46em,
      -0.749em -0.34em 0 -0.477em;
  }

  38% {
    box-shadow: 0 -0.83em 0 -0.4em, -0.377em -0.74em 0 -0.42em,
      -0.645em -0.522em 0 -0.44em, -0.775em -0.297em 0 -0.46em,
      -0.82em -0.09em 0 -0.477em;
  }

  100% {
    box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em,
      0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;
  }
}

@keyframes round {
  0% {
    transform: rotate(0deg)
  }

  100% {
    transform: rotate(360deg)
  }
}

@mixin spinner-base {
  text-indent: -9999em;
  overflow: hidden;
  transform: translateZ(0);
  animation: mltShdSpin 1s infinite ease, round 1s infinite ease;
  z-index: 1;
}


@mixin text-modal-content { 
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-sm);
  line-height: var(--text-line-height); 
  color: var(--default-font-color);
}

@mixin upload-status-styles($color) {
  color: $color;
  text-align: right;
  font-size: var(--font-size-xs);
  font-weight: var(--font-weight-sm);
  line-height: var(--text-line-height);
}





// ===============MIXINS ADDED BY MAX=================

@mixin divider {
  border-bottom: $lineThin solid $colorDivider;
}

@mixin dividerDarker {
  border-bottom: $lineThin solid $colorDividerDark;
}

@mixin textEmphasis {
  font-weight: 700;
}

// Paddings / LR=LeftRight TB=TopBottom S=SpacingBetween / LVL1->LVL9 = outside->inside

$paddingLvl1LR: var(--spacer-300);
$paddingLvl1TB: var(--spacer-250);
$paddingLvl1S: var(--spacer-200);

$paddingLvl2LR: var(--spacer-250);
$paddingLvl2TB: var(--spacer-200);
$paddingLvl2S: var(--spacer-150);

$paddingLvl3LR: var(--spacer-150);
$paddingLvl3TB: var(--spacer-125);
$paddingLvl3S: var(--spacer-100);

$paddingLvl4S: var(--spacer-075);

$paddingLvl5LR: var(--spacer-100);
$paddingLvl5TB: var(--spacer-075);
$paddingLvl5S: var(--spacer-050);

$paddingLvl6LR: var(--spacer-075);
$paddingLvl6TB: var(--spacer-050);
$paddingLvl6S: var(--spacer-025);

$paddingLvl7LR: var(--spacer-025);
$paddingLvl7TB: var(--spacer-050);
$paddingLvl7S: var(--spacer-025);


$paddingLvl2MinLR: var(--spacer-250);
$paddingLvl2MinTB: var(--spacer-100);
$paddingLvl2MinS: var(--spacer-100);

@mixin paddingLvl1 {
  padding: $paddingLvl1TB $paddingLvl1LR !important;

  & > * {
    margin-bottom: $paddingLvl1S !important;

    &:last-child {
      margin-bottom: 0 !important;
    }
  }
}

@mixin paddingLvl2 {
  padding: $paddingLvl2TB $paddingLvl2LR !important;

  & > * {
    margin-bottom: $paddingLvl2S !important;

    &:last-child {
      margin-bottom: 0 !important;
    }
  }
}

@mixin paddingLvl2-outter {
  padding: 0 !important;
  
  gap: $paddingLvl2S;

  // & > * {
    // margin-bottom: $paddingLvl2S !important;

    // &:last-child {
    //   margin-bottom: 0 !important;
    // }
  // }
}

@mixin paddingLvl2Min-outter {
  padding: $paddingLvl2MinTB $paddingLvl2MinLR !important;
}

@mixin paddingLvl2-buttons {
  padding: $paddingLvl2TB $paddingLvl2LR !important;
  gap: var(--spacer-100) !important;
}

@mixin paddingLvl3 {
  padding: $paddingLvl3TB $paddingLvl3LR !important;

  & > * {
    margin-bottom: $paddingLvl3S !important;

    &:last-child {
      margin-bottom: 0 !important;
    }
  }
}

@mixin paddingLvl4-inner {
  padding: 0 !important;

  & > * {
    margin-bottom: $paddingLvl4S !important;

    &:last-child {
      margin-bottom: 0 !important;
    }
  }
}

@mixin paddingLvl5 {
  padding: $paddingLvl5TB $paddingLvl5LR !important;

  & > * {
    margin-bottom: $paddingLvl5S !important;

    &:last-child {
      margin-bottom: 0 !important;
    }
  }
}

@mixin paddingLvl6 {
  padding: $paddingLvl6TB $paddingLvl6LR !important;

  & > * {
    margin-bottom: $paddingLvl6S !important;

    &:last-child {
      margin-bottom: 0 !important;
    }
  }
}

@mixin paddingLvl7 {
  padding: $paddingLvl7TB $paddingLvl7LR !important;

  & > * {
    margin-bottom: $paddingLvl7S !important;

    &:last-child {
      margin-bottom: 0 !important;
    }
  }
}

// Text bases to get stylin started

@mixin textBase($fontSize: $fontBase, $fontColor: $gray-darkest) {
  font-size: $fontSize;
  line-height: $fontLineHeight;
  color: $fontColor;
  font-weight: 400;

  padding: 0;
  margin: 0;
}

@mixin textBaseHightlight($fontSize: $fontBase, $fontColor: $gray-darkest) {
  @include textBase($fontSize, $fontColor);

  font-weight: 700;
}

@mixin textCardHead {
  @include textBase($fontBase*1.5);

  font-weight: 700;
}


// For clickable elements
// opacity changes

@mixin clickableFeedback1 {
  cursor: pointer;
  opacity: 1;

  transition: 300ms opacity;

  &[disabled],
  &.loading {
    cursor: default;
    pointer-events: none;
  }

  &:not([disabled]):hover,
  &:not(.loading):hover {
    opacity: 0.8;
  }
}

// background changes

@mixin clickableFeedback2 {
  cursor: pointer;

  transition: 300ms background-color;

  &[disabled] {
    cursor: default;
    pointer-events: none;
  }

  &:not([disabled]):hover {
    background-color: $primary-light;
  }
}

// main svg icon base

@mixin svgIcon($color: $primary) {
  overflow: visible;
  width: $base;
  height: auto;

  fill: none;

  transition: all 300ms;

  & path {
    stroke-width: $lineThick;
    stroke: $color;
    stroke-linecap: round;
    stroke-linejoin: round;
    vector-effect: non-scaling-stroke;
  }

  &.loading {
    animation: rotating 1s linear infinite;
  }
}

